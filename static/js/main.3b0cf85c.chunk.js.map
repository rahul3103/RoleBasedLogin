{"version":3,"sources":["serviceWorker.js","redux/action.js","redux/reducer/user.js","redux/reducer/login.js","redux/reducer/index.js","redux/reducer/greet.js","Authorize.js","roles/Greetings.js","roles/Agent.js","roles/Manager.js","roles/Admin.js","Login.js","Nav.js","index.js"],"names":["Boolean","window","location","hostname","match","login","email","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","callLoginApi","data","error","setUser","isLoginPending","type","isLoginSuccess","loginError","logOut","localStorage","removeItem","updateGreet","greet","callback","fetch","concat","then","resp","json","setItem","name","role","catch","initialState","combineReducers","user","state","arguments","length","undefined","action","Object","objectSpread","Authorize","allowedRoles","WrappedComponent","WithAuthorization","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","logOutUser","_this$props","props","history","push","welcome","inherits","createClass","key","value","includes","react_default","a","createElement","assign","React","Component","connect","Greeting","_ref","index_es","item","xs","md","lg","style","margin","paddingTop","backgroundColor","marginRight","onClick","Agent","container","marginTop","textAlign","Greetings","Manager","Admin","Login","username","handleChange","event","setState","defineProperty","target","submit","_this$state","renderLoginComp","label","onChange","color","withRouter","agent","manager","admin","Nav","getItem","authCheckState","BrowserRouter","basename","process","Route","exact","path","component","store","createStore","userLogin","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_Nav","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b0cf85c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nexport const SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nexport const SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nexport const SET_USER = 'SET_USER';\nexport const UNSET_USER = 'UNSET_USER';\nexport const UPDATE_GREET = 'UPDATE_GREET';\n\nexport const login = (email, password) => {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n\n    callLoginApi(email, password, (data, error) => {\n      dispatch(setLoginPending(false));\n      if (!error) {\n        dispatch(setLoginSuccess(true));\n        dispatch(setUser(data));\n      } else dispatch(setLoginError(error));\n    });\n  };\n};\n\nconst setLoginPending = isLoginPending => {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n};\n\nconst setLoginSuccess = isLoginSuccess => {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n};\n\nconst setLoginError = loginError => {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  };\n};\n\nexport const setUser = data => ({\n  type: SET_USER,\n  data\n});\n\nexport const logOut = () => {\n  localStorage.removeItem('name');\n  localStorage.removeItem('role');\n  return dispatch => {\n    dispatch({\n      type: UNSET_USER\n    });\n    dispatch(setLoginSuccess(false));\n    dispatch(updateGreet('Welcome'));\n  };\n};\n\nexport const authCheckState = () => {\n  const data = {\n    name: localStorage.getItem('name'),\n    role: localStorage.getItem('role')\n  };\n  if (data.name && data.role)\n    return dispatch => {\n      dispatch(setUser(data));\n      dispatch(setLoginSuccess(true));\n    };\n  return dispatch => {\n    dispatch(logOut());\n  };\n};\n\nexport const updateGreet = greet => ({\n  type: UPDATE_GREET,\n  greet\n});\n\nconst callLoginApi = (email, password, callback) => {\n  fetch(`https://demo2837922.mockable.io/user?id=${email}&&pass=${password}`)\n    .then(resp => resp.json())\n    .then(data => {\n      localStorage.setItem('name', data.name);\n      localStorage.setItem('role', data.role);\n      callback(data);\n    })\n    .catch(() => callback({}, 'Invalid email and password'));\n};\n","import { SET_USER, UNSET_USER } from '../action';\n\nconst initialState = {\n  name: null,\n  role: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER:\n      return {\n        name: action.data.name,\n        role: action.data.role\n      };\n    case UNSET_USER:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import {\n  SET_LOGIN_PENDING,\n  SET_LOGIN_SUCCESS,\n  SET_LOGIN_ERROR\n} from '../action';\n\nconst initialState = {\n  isLoginSuccess: false,\n  isLoginPending: false,\n  loginError: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOGIN_PENDING:\n      return { ...state, isLoginPending: action.isLoginPending };\n\n    case SET_LOGIN_SUCCESS:\n      return { ...state, isLoginSuccess: action.isLoginSuccess };\n\n    case SET_LOGIN_ERROR:\n      return { ...state, loginError: action.loginError };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport login from './login';\nimport greet from './greet';\n\nexport default combineReducers({\n  user,\n  login,\n  greet\n});\n","import { UPDATE_GREET } from '../action';\n\nconst initialState = 'Welcome';\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_GREET:\n      return action.greet;\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { logOut, updateGreet } from './redux/action';\n\nconst Authorize = allowedRoles => {\n  return WrappedComponent => {\n    class WithAuthorization extends React.Component {\n      logOutUser = () => {\n        const { dispatch, history } = this.props;\n        dispatch(logOut());\n        history.push('/');\n      };\n\n      welcome = greet => {\n        const { dispatch } = this.props;\n        dispatch(updateGreet(greet));\n      };\n\n      render() {\n        const { user } = this.props;\n        if (allowedRoles.includes(user.role))\n          return (\n            <WrappedComponent\n              welcome={this.welcome}\n              logOutUser={this.logOutUser}\n              {...this.props}\n            />\n          );\n        else return <h1>Access Denied</h1>;\n      }\n    }\n    const mapStateToProps = state => ({\n      user: state.user,\n      greet: state.greet\n    });\n    return connect(mapStateToProps)(WithAuthorization);\n  };\n};\n\nexport default Authorize;\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\n\nconst Greeting = ({ welcome }) => {\n  return (\n    <Grid\n      item\n      xs={12}\n      md={9}\n      lg={6}\n      style={{ margin: \"0 auto\", paddingTop: 10 }}\n    >\n      <h3>Greet in different ways</h3>\n      <Button\n        style={{ backgroundColor: \"grey\", marginRight: 10 }}\n        onClick={() => welcome(\"Wadakam\")}\n      >\n        Wadakam\n      </Button>\n      <Button\n        style={{ backgroundColor: \"grey\", marginRight: 10 }}\n        onClick={() => welcome(\"Welcome\")}\n      >\n        Welcome\n      </Button>\n      <Button\n        style={{ backgroundColor: \"grey\", marginRight: 10 }}\n        onClick={() => welcome(\"Namaskar\")}\n      >\n        Namaskar\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Greeting;\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\n\nimport Greetings from \"./Greetings\";\n\nconst Agent = ({ logOutUser, user, welcome, greet }) => {\n  return (\n    <Grid container style={{ marginTop: \"10%\", textAlign: \"center\" }}>\n      <Grid item xs={12} md={9} lg={6} style={{ margin: \"0 auto\" }}>\n        <h2>{user.role}</h2>\n        <h3>\n          {greet} {user.name}\n        </h3>\n        <Button style={{ backgroundColor: \"grey\" }} onClick={logOutUser}>\n          Logout\n        </Button>\n        <Greetings welcome={welcome} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Agent;\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\n\nimport Greetings from \"./Greetings\";\n\nconst Manager = ({ logOutUser, user, welcome, greet }) => {\n  return (\n    <Grid container style={{ marginTop: \"10%\", textAlign: \"center\" }}>\n      <Grid item xs={12} md={9} lg={6} style={{ margin: \"0 auto\" }}>\n        <h2>{user.role}</h2>\n        <h3>\n          {greet} {user.name}\n        </h3>\n        <Button style={{ backgroundColor: \"grey\" }} onClick={logOutUser}>\n          Logout\n        </Button>\n        <Greetings welcome={welcome} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Manager;\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\n\nimport Greetings from \"./Greetings\";\n\nconst Admin = ({ logOutUser, user, welcome, greet }) => {\n  return (\n    <Grid container style={{ marginTop: \"10%\", textAlign: \"center\" }}>\n      <Grid item xs={12} md={9} lg={6} style={{ margin: \"0 auto\" }}>\n        <h2>{user.role}</h2>\n        <h3>\n          {greet} {user.name}\n        </h3>\n        <Button style={{ backgroundColor: \"grey\" }} onClick={logOutUser}>\n          Logout\n        </Button>\n        <Greetings welcome={welcome} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Admin;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { TextField, Button, Grid, CircularProgress } from '@material-ui/core';\nimport { withRouter } from 'react-router';\n\nimport { login } from './redux/action';\n\nclass Login extends React.Component {\n  state = {\n    username: '',\n    password: ''\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  submit = () => {\n    const { username, password } = this.state;\n    const { dispatch } = this.props;\n    dispatch(login(username, password));\n  };\n\n  componentDidUpdate() {\n    const { history, user, isLoginSuccess } = this.props;\n    if (isLoginSuccess && user.role) history.push(`/${user.role}`);\n  }\n\n  renderLoginComp = () => {\n    return (\n      <div>\n        <TextField\n          label=\"User Name\"\n          value={this.state.username}\n          onChange={this.handleChange('username')}\n          margin=\"normal\"\n        />\n        <br />\n        <TextField\n          label=\"Password\"\n          value={this.state.password}\n          onChange={this.handleChange('password')}\n          margin=\"normal\"\n        />\n        <br />\n        <Button style={{ backgroundColor: 'grey' }} onClick={this.submit}>\n          Login\n        </Button>\n        <br />\n        <div style={{ color: 'red' }}>{this.props.loginError}</div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Grid container style={{ marginTop: '10%', textAlign: 'center' }}>\n        <Grid item xs={12} md={9} lg={6} style={{ margin: '0 auto' }}>\n          {this.props.isLoginPending ? (\n            <CircularProgress />\n          ) : (\n            this.renderLoginComp()\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoginPending: state.login.isLoginPending,\n  isLoginSuccess: state.login.isLoginSuccess,\n  loginError: state.login.loginError,\n  user: state.user\n});\n\nexport default withRouter(connect(mapStateToProps)(Login));\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { authCheckState } from './redux/action';\nimport Authorize from './Authorize';\nimport Agent from './roles/Agent';\nimport Manager from './roles/Manager';\nimport Admin from './roles/Admin';\nimport Login from './Login';\n\nconst agent = Authorize(['agent']);\nconst manager = Authorize(['manager']);\nconst admin = Authorize(['admin']);\n\nclass Nav extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(authCheckState());\n  }\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Route exact path={`/`} component={Login} />\n          <Route path=\"/agent\" component={agent(Agent)} />\n          <Route path=\"/manager\" component={manager(Manager)} />\n          <Route path=\"/admin\" component={admin(Admin)} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(Nav);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport userLogin from './redux/reducer/index';\nimport Nav from './Nav';\n\nconst store = createStore(userLogin, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Nav />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}